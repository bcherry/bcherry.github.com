<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Adequately Good - Posts tagged “javascript”</title>

    <!-- CSS, including Blueprint, jQuery w/Smoothness, and AG CSS -->
    <link rel="stylesheet" href="/css/blueprint/blueprint.min.css" media="screen, projection" />
    <link rel="stylesheet" href="/css/blueprint/print.min.css" media="print" />
    <!--[if lt IE 8]>
      <link rel="stylesheet" href="/css/blueprint/ie.min.css" media="screen, projection">
    <![endif]-->
    <link rel="stylesheet" href="/css/ag.css" media="screen" />

    <!-- Extra <head> Links -->
    <link rel="alternate" type="application/atom+xml" title="Adequately Good Atom Feed" href="http://www.adequatelygood.com/feeds/atom.xml" />

    <!-- TODO: favicon -->

    <!-- IE HTML5 Compatibility -->
    <!--[if IE]>
      <script type="text/javascript">
        (function () {
          var tags = "header hgroup nav article time footer".split(" "),
            i = 0,
            l = tags.length;
          for (; i < l; i += 1) {
            document.createElement(tags[i]);
          }
        }());
      </script>
    <![endif]-->
  </head>
  <body>
    <a name="top"></a>
    <div id="container" class="container">

      <!-- Header -->
      <header class="span-24 last">
        <!-- Title -->
        <div id="title" class="span-24 last">
          <div class="span-17 colborder prepend-top append-bottom">
            <hgroup>
              <h1>
                <a href="/">adequately good</a>
              </h1>
              <h3 class="prepend-2 alt">decent programming advice</h3>
            </hgroup>
          </div>
          <div class="span-6 last prepend-top append-bottom">
            <h2>
              written by
              <a href="http://twitter.com/bcherry">ben cherry</a>
            </h2>
          </div>
        </div>

        <hr />

        <!-- Navigation Bar -->
        <nav class="prepend-2 span-20 append-2 last append-bottom">
          <div class="span-5">
            <a href="/">home</a>
          </div>
          <div class="span-5">
            <a href="#" id="archiveLink">archives</a>
          </div>
          <div class="span-5">
            <a href="/About-Ben">about</a>
          </div>
          <div class="span-5 last">
            <a href="/feeds/atom.xml">feed</a>
          </div>
        </nav>

        <!-- Archives Links -->
        <div id="archives" class="span-24 last smallalts">
          <hr />
          <div class="archivelinks">
            <span class="alt">posts by year</span>
            
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
                  <a class="tight" href="/2009">2009</a>
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
              
            
              
                
                
                
                  <a class="tight" href="/2010">2010</a>
                
              
            
              
                
                
                
              
            
              
                
                
                
                  <a class="tight" href="/2011">2011</a>
                
              
            
          </div>
        </div>

        <hr />
      </header>

      <div id="colcontainer" class="span-24 last">
        <!-- Main content: Posts, etc. -->
        <div id="content" class="span-17 colborder">
          <a name="main"></a>
          <div class="smallalts listing">
  <span class="alt">all posts filed under</span>
  <a class="tight" href="/tags/javascript">javascript</a>
</div>

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2011-04-07" pubdate>2011-04-07</time>
  
  <h1><a href="/2011/4/Replacing-setTimeout-Globally">Replacing `setTimeout` Globally</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>Sometimes, you might want to overwrite built-in global methods like <code>setTimeout</code> and <code>setInterval</code>. If you try, you might find that it’s much harder than you think to accomplish this in every browser, particularly if you ever want to find the originals again. After a lot of painful exp...</p></body></html>
  </div>
</article>

  

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-07-25" pubdate>2010-07-25</time>
  
  <h1><a href="/2010/7/Saner-HTML5-History-Management">Saner HTML5 History Management</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body>
<h2 id="hashchange">Hashchange</h2>

<p>This event is quite simple. Whenever the <code>window.location.hash</code> property changes, by following a link, setting the property, editing the URL bar, or ...</p>
</body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-07-08" pubdate>2010-07-08</time>
  
  <h1><a href="/2010/7/Writing-Testable-JavaScript">Writing Testable JavaScript</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>The engineering culture at Twitter requires tests. Lots of tests. I haven’t had formal experience with JavaScript testing before Twitter, so I’ve been learning a lot as I go. In particular, a number of patterns I used to use, write about, and encourage have turned out to be b...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-05-12" pubdate>2010-05-12</time>
  
  <h1><a href="/2010/5/Spying-Constructors-in-JavaScript">Spying Constructors in JavaScript</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>When writing unit-tests for code, a common technique is <strong>spying</strong>, where you set expectations on a method’s invoc...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-04-13" pubdate>2010-04-13</time>
  
  <h1><a href="/2010/4/Debugging-Closures-and-Modules">Debugging Closures and Modules</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>The most common co...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-03-30" pubdate>2010-03-30</time>
  
  <h1><a href="/2010/3/Object-to-Primitive-Conversions-in-JavaScript">Object-to-Primitive Conversions in JavaScript</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>Like most object-oriented programming languages, JavaScript provides built-in ways to convert between objects and primitive values, by way of the special <code>toString</code> and <code>valueOf</code> methods. This article will cover the basics of these methods, but then dive into the details of how this stuff really works, bad stuff, performan...</p></body></html>
  </div>
</article>

  

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-03-21" pubdate>2010-03-21</time>
  
  <h1><a href="/2010/3/JavaScript-Better-and-Faster">JavaScript: Better and Faster</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>“JavaScript: Better and Faster” is the name of a presentation I gave at <a href="http://www.slide.com">Slide</a> last week. It was generally well-received by the Slide crew so I decided to put a (slightly edited) copy of the <a href="http://www.bcherry.net/talks/js-better-faster">accompanying slidesho...</a></p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-03-12" pubdate>2010-03-12</time>
  
  <h1><a href="/2010/3/JavaScript-Module-Pattern-In-Depth">JavaScript Module Pattern: In-Depth</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>The module pattern is a common JavaScript coding pattern. It’s generally well understood, but there ar...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-03-08" pubdate>2010-03-08</time>
  
  <h1><a href="2010/3/Performance-of-vs-">Performance of === vs. ==</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>One particular weirdness and unpleasantry in JavaScript is the set of equality operators. Like virtually every language, JavaScript has the standard <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, and <code>&gt;=</code> operators. However, <code>==</code> an...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-02-26" pubdate>2010-02-26</time>
  
  <h1><a href="/2010/2/Minimum-Timer-Intervals-in-JavaScript">Minimum Timer Intervals in JavaScript</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>I was talking with a co-worker today about the behavior of <code>setTimeout</code> and <code>setInterval</code> when given a small interval, like <code>0</code> or <code>1</code>. The <em>expectation</em> would be tha...</p></body></html>
  </div>
</article>

  

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-02-12" pubdate>2010-02-12</time>
  
  <h1><a href="/2010/2/Finding-Improper-JavaScript-Globals">Finding Improper JavaScript Globals</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body>
<p>When I interview web developers, my first JavaScript question is usually the following:</p>
<blockquote>What is the difference, in JavaScript, between <code class="js inline">x = 1</code> and <code class="js inline">var x = 1</code>.  Feel free to answer in as much ...</blockquote>
</body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-02-08" pubdate>2010-02-08</time>
  
  <h1><a href="/2010/2/JavaScript-Scoping-and-Hoisting">JavaScript Scoping and Hoisting</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body>
<p>Do you know what value will be alerted if the following is executed as a JavaScript program?</p>

<pre><code>var foo = 1;
function bar() {
	if (!foo) {
		var foo = 10;
	}
	alert(foo);
}
bar();</code></pre>

<p>If it surprises you that the answer is “10”, then this one will probably really th...</p>
</body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-02-03" pubdate>2010-02-03</time>
  
  <h1><a href="/2010/2/SearchReplace-in-the-DOM-with-jQuery">Search/Replace in the DOM with jQuery</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>Ever had a need to to a text search/replace through the DOM?  For articles in drafting on this blog I often use the form (TODO: somethi...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-02-01" pubdate>2010-02-01</time>
  
  <h1><a href="/2010/2/Why-JavaScripts-new-Keyword-Sucks">Why JavaScript's "new" Keyword Sucks</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><pre><code>&gt;&gt;&gt; function F() { return function inner() { return "inner invoked"; }; }
&gt;...</code></pre></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2010-01-29" pubdate>2010-01-29</time>
  
  <h1><a href="/2010/1/Preloading-JS-and-CSS-as-Print-Stylesheets">Preloading JS and CSS as Print Stylesheets</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p><em><strong>UPDATE: This technique has turned out to be dangerous in Chrome.  It seems that Chrome will load the JS files into the cache, but  then set an implied type="text/css" on them.  This means that it will refuse to re-use them as Java...</strong></em></p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2009-11-28" pubdate>2009-11-28</time>
  
  <h1><a href="/2009/11/Consuljs-Simple-Logging-Abstraction">Consul.js, Simple Logging Abstraction</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>I've been reading <em>Coders At Work</em> by Peter Seibel, and one question he asks in every interview is "How do you debug - print statements, debugger like gdb, or something else?".  For me, print statements are my first tool for any situation.  That's why Firebug is so...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2009-11-05" pubdate>2009-11-05</time>
  
  <h1><a href="/2009/11/JS-Find-and-Replace-with-SplitJoin">JS Find-and-Replace with Split/Join</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p><strong><em>Update: This advice is now totally out-of-date and wrong. Just use <code>replace</code>. As <a href="http://jsperf.com/test-join-and-split">recent Browserscope results show</a>, all browsers have optimized <code>replace</code> to be much faster than <code>split</code>/<code>join</code>. Thanks to Luigi van der Pal for pointing this out ...</em></strong></p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2009-11-05" pubdate>2009-11-05</time>
  
  <h1><a href="/2009/11/Javascript-Pseudo-threading">Javascript Pseudo-threading</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body>
<p><strong><em>This post has been migrated from my old, defunct blog at bcherry.net. The links may not work, and the formatting may be wonky.</em></strong></p>

<p>I’ve been playing around with asynchronous Javascript for repeated large-set actions, in the hopes of generating some useful techniques for real applications. I’ve narrowed down a...</p>
</body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2009-11-05" pubdate>2009-11-05</time>
  
  <h1><a href="/2009/11/jQuery-Micro-templates">jQuery Micro-templates</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body>
<p>John Resig wrote a neat micro-templating Javascript function a <a href="http://ejohn.org/blog/javascript-micro-templating/">while back</a>. I’ve been playing with this, and have discovered two things:</p>

<ol><li>
<p>These templates are totally nestable. Just make an element to be templated within a tem...</p>
</li></ol>
</body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2009-11-05" pubdate>2009-11-05</time>
  
  <h1><a href="/2009/11/Managing-CSS-Through-Javascript">Managing CSS Through JavaScript</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body><p>It’s often very difficult to keep track of what CSS goes where. Especially when you load up on Javascript controls and files in a large application, which render markup that depends on some CSS being there. One solution is to “inline” the CSS in the JavaScript, by adding style to each element as it’s created. This works, but it’s messy. Also, browsers are heavily optimized to apply CSS, faster than any Javascript solution could be. But when you’ve got a fancy script manager like LABjs, remembering to statically link all of the important CSS is a pain. Especially so if you’re not sure at page load whethe...</p></body></html>
  </div>
</article>

  

  
    <article class="span-17 last">
  <header class="span-17 last">
  
    <time class="alt" datetime="2009-11-05" pubdate>2009-11-05</time>
  
  <h1><a href="/2009/11/Building-a-Better-Friend-Selector">Building a Better Friend Selector</a></h1>
</header>
  <div class="span-17 last entry">
    <html><body>
<p><strong><em>This post has been migrated from my old, defunct blog at bcherry.net. The links may not work, and the formatting may be wonky.</em></strong></p>

<p>Working in social entertainment, one of the lynchpins of the entire business is the friend selector. Without it, there is virtually no way to grow your customer base. Having a simple, effective friend selector ...</p>
</body></html>
  </div>
</article>

  

  


        </div>

        <!-- Sidebar: Search, links, etc. -->
        <div id="sidebar" class="span-6 last">
          <hr class="space" />

          <div id="links">
            <h3>the author</h3>
            <p>
              Ben is a 25 year-old software engineer. He lives and works in San Francisco. Many people think he invented the term "hoisting" in JavaScript, but this is untrue.
            </p>
            <ul>
              <li><a href="http://twitter.com/bcherry">Twitter</a> - @<a class="twitter-anywhere-user" href="http://twitter.com/bcherry">bcherry</a></li>
              <li><a href="http://github.com/bcherry">GitHub</a> - My Code</li>
              <li><a href="http://www.linkedin.com/in/bcherryprogrammer">LinkedIn</a> - Professional Profile</li>
              <li><a href="http://www.facebook.com/bcherry">Facebook</a> - That Other Social Network</li>
              <li><a href="http://www.bcherry.net/talks/">Presentations</a> - Slides From My Talks</li>
            </ul>
            <iframe allowtransparency="true" frameborder="0" scrolling="no"
              src="http://platform.twitter.com/widgets/follow_button.html?screen_name=bcherry&amp;button=grey&amp;text_color=7F7F7F&amp;link_color=666666"
              style="width:300px; height:20px;"></iframe>
          </div>

          <hr />

          <div id="tags">
            <h3>categories</h3>
            <ul>
            
              <li>
                <a href="/tag/javascript">javascript</a>
                (21)
              </li>
            
              <li>
                <a href="/tag/social%20gaming">social gaming</a>
                (1)
              </li>
            
              <li>
                <a href="/tag/css">css</a>
                (1)
              </li>
            
              <li>
                <a href="/tag/jquery">jquery</a>
                (2)
              </li>
            
              <li>
                <a href="/tag/performance">performance</a>
                (5)
              </li>
            
              <li>
                <a href="/tag/tools">tools</a>
                (2)
              </li>
            
              <li>
                <a href="/tag/html5">html5</a>
                (3)
              </li>
            
              <li>
                <a href="/tag/adequatelygood">adequatelygood</a>
                (1)
              </li>
            
              <li>
                <a href="/tag/timers">timers</a>
                (2)
              </li>
            
              <li>
                <a href="/tag/module%20pattern">module pattern</a>
                (3)
              </li>
            
              <li>
                <a href="/tag/talks">talks</a>
                (1)
              </li>
            
              <li>
                <a href="/tag/slide">slide</a>
                (1)
              </li>
            
              <li>
                <a href="/tag/python">python</a>
                (1)
              </li>
            
              <li>
                <a href="/tag/debugging">debugging</a>
                (1)
              </li>
            
              <li>
                <a href="/tag/testing">testing</a>
                (2)
              </li>
            
              <li>
                <a href="/tag/hashbang">hashbang</a>
                (1)
              </li>
            
            </ul>
          </div>

          <hr />

          
        </div>
      </div>
    </div>

    <script>
      (function() {
        var archiveLink = document.getElementById("archiveLink"),
            archives = document.getElementById("archives");

        archiveLink.onclick = function() {
          if (archives.className.match(/\bexpanded\b/)) {
            archives.className = archives.className.replace(/\bexpanded\b/g, '');
          } else {
            archives.className += ' expanded';
          }
          return false;
        };
      }());
    </script>

    <!-- Google Analytics -->
    <script type="text/javascript">var _gaq =_gaq||[]; _gaq.push(['_setAccount','UA-251077-4']);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(ga);})();</script>
  </body>
</html>
